{"version":3,"sources":["components/layout/Flex.tsx","utils/latinise.ts","components/PageHeader/PageHeader.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","components/ApyCalculatorModal/index.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmImage.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","views/Home/components/CardValue.tsx","utils/callHelpers.ts","views/Home/components/CardBusdValue.tsx","hooks/usePersistState.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","hooks/useApprove.ts","utils/apr.ts","components/Countdown/index.tsx","components/Select/Select.tsx"],"names":["FlexLayout","styled","div","Latinise","latin_map","τ","Τ","latinise","input","replace","x","Outer","Box","theme","background","colors","gradients","bubblegum","Inner","Container","PageHeader","children","props","Wrapper","primary","ExpandableSectionButton","onClick","expanded","t","useTranslation","aria-label","role","color","bold","defaultProps","ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","isTokenOnly","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","href","symbol","CoreTag","variant","outline","startIcon","width","mr","CommunityTag","DualTag","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","flexDirection","split","useStake","pid","dispatch","useAppDispatch","account","useWeb3React","masterChefContract","useMasterchef","useFarmFromPid","token","tokenDecimals","decimals","onStake","useCallback","amount","a","stake","txHash","fetchFarmUserDataAsync","console","info","useUnstake","onUnstake","unstake","StyledTokenInput","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","onChange","onSelectMax","value","inputTitle","isBalanceZero","style","position","pl","fontSize","balance","balanceNumber","Number","toLocaleString","undefined","maximumFractionDigits","displayBalance","pattern","inputMode","step","min","placeholder","scale","external","DepositModal","onConfirm","onDismiss","tokenName","depositFeeBP","useState","val","setVal","pendingTx","setPendingTx","error","setError","fullBalance","useMemo","getFullDisplayBalance","valNumber","BigNumber","fullBalanceNumber","handleChange","e","currentTarget","validity","valid","handleSelectMax","title","textAlign","marginTop","times","toString","ModalActions","disabled","isFinite","eq","gt","message","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","location","useLocation","stakedBalanceNumber","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","some","item","pathname","includes","HarvestAction","earnings","onReward","useHarvest","cakePrice","usePriceCakeBusd","rawEarningsBalance","earningsBusd","multipliedBy","toNumber","CardBusdValue","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","address","CHAIN_ID","onApprove","useApprove","handleApprove","textTransform","pr","edition","mt","UnlockButton","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","Grid","GridItem","ApyCalculatorModal","apr","linkLabel","linkHref","earningTokenSymbol","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","num","maxWidth","freq","fee","ApyButton","onPresentApyModal","event","stopPropagation","ml","FarmImage","imgSize","size","symbolLower","toLocaleLowerCase","quoteSymbolLower","quoteToken","toLowerCase","src","alt","height","className","marginLeft","AccentGradient","keyframes","StyledCardAccent","primaryBright","secondary","FCard","card","isPromotedFarm","radii","Divider","borderColor","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","earnLabel","dual","farmAPR","liquidityUrlPathParts","BASE_SWAP_URL","BASE_ADD_LIQUIDITY_URL","isCommunity","display","CardActionsContainer","projectLink","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","useEffect","timeoutId","setTimeout","clearTimeout","textSubtle","AprWrapper","Apr","originalValue","hideButton","Farm","image","label","useFarmUser","rawStakedBalance","marginRight","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","Subtle","ActionContent","Staked","earningsBigNumber","isZero","useCountUp","start","end","duration","separator","countUp","update","updateValue","useRef","current","marginBottom","expandAnimation","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","InputWrapper","SearchInput","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","target","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Farms","Image","tokenMode","path","useFarms","farmsLP","userDataLoaded","bnbPrice","usePriceBnbBusd","query","setQuery","usePersistState","setViewMode","sortOption","setSortOption","prices","useGetApiPrices","fastRefresh","useRefresh","isArchived","isInactive","stakedOnly","setStakedOnly","setLoadArchivedFarmsData","fetchFarmsPublicDataAsync","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceUsd","priceFromAPI","Math","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","poolPrimaryTitle","farmPrimaryTitle","poolSecondaryTitle","farmSecondaryTitle","Countdown","Page","checked","length","Select","options","option","sort","b","exact","renderContent","bottomIllustration","CardValue","lineHeight","prefix","approve","methods","ethers","constants","MaxUint256","send","from","powDecimals","BIG_TEN","pow","DEFAULT_TOKEN_DECIMAL","referrals","enabled","deposit","getReferralAddress","gas","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","withdraw","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","harvest","soushHarvest","soushHarvestBnb","BIG_ZERO","referralAddress","localStorage","getItem","initialValue","localStorageKey","valueFromLS","JSON","parse","setValue","setItem","stringify","StyledSpacer","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","i","farmPid","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","cakePriceUsd","poolLiquidityUsd","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","isNaN","CountdownWrapper","EstimatedText","BlockNumber","p","hourSeconds","daySeconds","renderTime","dimension","time","now","Date","remainingSeconds","startTime","getTime","daysDuration","ceil","countdownUrl","startBlock","timerProps","isPlaying","strokeWidth","rel","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","offsetWidth","offsetHeight"],"mappings":"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","file":"static/js/12.ca393a72.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  isTokenOnly?: boolean\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  isTokenOnly,\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        <Text>{totalValueFormatted}</Text>\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{isTokenOnly ? 'Token Project' : 'See Pair Info'}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon } from '@pancakeswap/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst ManualPoolTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Manual\n  </Tag>\n)\n\nconst CompoundingPoolTag = (props) => (\n  <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n    Auto\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pancakeswap/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: JSX.Element\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      {/* <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} /> */}\n      {farmImage}\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useFarmFromPid } from 'state/hooks'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { isTokenOnly, token } = useFarmFromPid(pid)\n  const tokenDecimals = isTokenOnly && token.decimals\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account, tokenDecimals)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, tokenDecimals],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  // TODO\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account, 18) // TODO\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useFarmFromPid } from 'state/hooks'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { isTokenOnly, token } = useFarmFromPid(pid)\n  const tokenDecimals = isTokenOnly && token.decimals\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account, tokenDecimals)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, tokenDecimals],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account, 18) // TODO\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceNumber = Number(balance)\n    if (balanceNumber > 0 && balanceNumber < 0.0001) {\n      return balanceNumber.toLocaleString(undefined, { maximumFractionDigits: 20 })\n    }\n    return balanceNumber.toLocaleString()\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal, Alert, Text } from '@pancakeswap/uikit'\nimport { Token } from 'config/constants/types'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  token: Token\n  isTokenOnly: boolean\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  token,\n  isTokenOnly,\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  addLiquidityUrl,\n  depositFeeBP,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [error, setError] = useState('')\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, isTokenOnly ? token.decimals : 18)\n  }, [max, token.decimals, isTokenOnly])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      {depositFeeBP > 0 ? (\n        <Text style={{ fontSize: 13, textAlign: 'right', marginTop: 4 }}>\n          Deposit Fee: {new BigNumber(val || 0).times(depositFeeBP / 10000).toString()} {tokenName}\n        </Text>\n      ) : null}\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setError('')\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              onDismiss()\n            } catch (e) {\n              setError(e?.message)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      {error && (\n        <Alert title=\"Error\" variant=\"danger\">\n          {error}\n        </Alert>\n      )}\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Alert, Button, Modal } from '@pancakeswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\n\ninterface WithdrawModalProps {\n  token: Token\n  isTokenOnly: boolean\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  token,\n  isTokenOnly,\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n}) => {\n  const [val, setVal] = useState('')\n  const [error, setError] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, isTokenOnly ? token.decimals : 18)\n  }, [max, token.decimals, isTokenOnly])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setError('')\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              onDismiss()\n            } catch (e) {\n              setError(e?.message)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      {error && (\n        <Alert title=\"Error\" variant=\"danger\">\n          {error}\n        </Alert>\n      )}\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { useFarmFromPid } from 'state/hooks'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const { isTokenOnly, token, depositFeeBP } = useFarmFromPid(pid)\n  const location = useLocation()\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance, isTokenOnly ? token.decimals : 18)\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance, isTokenOnly, token.decimals])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      isTokenOnly={isTokenOnly}\n      token={token}\n      max={tokenBalance}\n      onConfirm={onStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      depositFeeBP={depositFeeBP}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      isTokenOnly={isTokenOnly}\n      token={token}\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={tokenName}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const cakePrice = usePriceCakeBusd()\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0 // earnings in WS Token - always 18 decimals\n  const displayBalance = rawEarningsBalance.toLocaleString()\n  const earningsBusd = rawEarningsBalance ? new BigNumber(rawEarningsBalance).multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalance}\n        {earningsBusd > 0 && <CardBusdValue value={earningsBusd} />}\n      </Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { edition } from 'edition'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport { CHAIN_ID } from 'config'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, isTokenOnly } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n  const earnings = new BigNumber(earningsAsString)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n\n  const lpContract = isTokenOnly\n    ? getBep20Contract(farm.token.address[CHAIN_ID], web3)\n    : getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {edition.tokenSymbol.toUpperCase()}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\nimport { edition } from 'edition'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = edition.tokenSymbol.toUpperCase(),\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('%symbol% per $1000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Box mb=\"28px\" maxWidth=\"280px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n            { freq: compoundFrequency.toLocaleString() },\n          )}\n        </Text>\n        {performanceFee > 0 && (\n          <Text mt=\"14px\" fontSize=\"12px\" color=\"textSubtle\">\n            {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n          </Text>\n        )}\n      </Box>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import { Flex } from '@pancakeswap/uikit'\nimport React from 'react'\nimport { Farm } from 'state/types'\n\ninterface Props {\n  farm: Farm\n  size?: 'sm' | 'lg'\n}\n\nconst FarmImage: React.FC<Props> = ({ farm, size }) => {\n  const symbolLower = farm.token.symbol.toLocaleLowerCase()\n  const quoteSymbolLower = farm.quoteToken.symbol.toLowerCase()\n  let imgSize\n  if (farm.isTokenOnly) {\n    imgSize = size === 'sm' ? 48 : 64\n  } else {\n    imgSize = size === 'sm' ? 32 : 48\n  }\n  return farm?.isTokenOnly ? (\n    <img\n      src={`/images/farms/${symbolLower}.png`}\n      alt={symbolLower}\n      width={imgSize}\n      height={imgSize}\n      style={{ height: imgSize }}\n    />\n  ) : (\n    <Flex className=\"flex space-x-1\">\n      <img\n        src={`/images/farms/${symbolLower}.png`}\n        alt={symbolLower}\n        width={imgSize}\n        height={imgSize}\n        style={{ height: imgSize }}\n      />\n      <img\n        src={`/images/farms/${quoteSymbolLower}.png`}\n        alt={quoteSymbolLower}\n        width={imgSize}\n        height={imgSize}\n        style={{ marginLeft: size === 'sm' ? '-12px' : '-18px', height: imgSize }}\n      />\n    </Flex>\n  )\n}\n\nexport default FarmImage\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL, BASE_SWAP_URL, CHAIN_ID } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { edition } from 'edition'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\nimport FarmImage from '../FarmImage'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted = farm.liquidity\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : edition.tokenSymbol.toUpperCase()\n\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = farm.isTokenOnly\n    ? `${BASE_SWAP_URL}?outputCurrency=${farm.token.address[CHAIN_ID]}`\n    : `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === edition.tokenSymbol.toUpperCase()\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        farmImage={<FarmImage farm={farm} />}\n        tokenSymbol={farm.token.symbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\" style={{ marginTop: 6 }}>\n        <Text>Deposit Fee:</Text>\n        <Text bold>{farm.depositFeeBP / 100}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          isTokenOnly={farm.isTokenOnly}\n          removed={removed}\n          bscScanAddress={\n            farm.isTokenOnly\n              ? `https://bscscan.com/token/${getAddress(farm.token.address)}`\n              : `https://bscscan.com/address/${lpAddress}`\n          }\n          infoAddress={farm.isTokenOnly ? farm.token.projectLink : `https://pancakeswap.info/pair/${lpAddress}`}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: JSX.Element\n  isTokenOnly: boolean\n}\n\nconst IconImage = styled.div`\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const { isTokenOnly, token } = useFarmFromPid(pid)\n  const rawStakedBalance = getBalanceNumber(stakedBalance, isTokenOnly ? token.decimals : 18)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <div style={{ marginRight: 16 }}>{image}</div>\n      {/* <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" /> */}\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { edition } from 'edition'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <div>\n      The multiplier represents the amount of {edition.tokenSymbol.toUpperCase()} rewards each farm gets.\n      <br />\n      <br />\n      For example, if a 1x farm was getting 1 {edition.tokenSymbol.toUpperCase()} per block, a 40x farm would be getting\n      40 {edition.tokenSymbol.toUpperCase()} per block.\n    </div>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity ? (\n    `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  ) : (\n    <Skeleton width={60} />\n  )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('The total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\n// TODO: Use `Text` instead\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Button, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { edition } from 'edition'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = 0\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceNumber(earningsBigNumber) // earnings in WS Token - always 18 decimals\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { t } = useTranslation()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>{edition.tokenSymbol.toUpperCase()} </Title>\n        <Subtle>{t('Earned').toUpperCase()}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {countUp > 0 && <Staked>~{countUp}USD</Staked>}\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getAddress } from 'utils/addressHelpers'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { isTokenOnly, depositFeeBP } = useFarmFromPid(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n  const location = useLocation()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance, isTokenOnly ? token.decimals : 18)\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance, isTokenOnly, token.decimals])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      isTokenOnly={isTokenOnly}\n      token={token}\n      max={tokenBalance}\n      onConfirm={onStake}\n      tokenName={lpSymbol}\n      addLiquidityUrl={addLiquidityUrl}\n      depositFeeBP={depositFeeBP}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      isTokenOnly={isTokenOnly}\n      token={token}\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={lpSymbol}\n    />,\n  )\n\n  const lpContract = isTokenOnly ? getBep20Contract(getAddress(token.address), web3) : getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Start Farming').toUpperCase()}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{t('Staked').toUpperCase()}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Stake').toUpperCase()} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Start Farming').toUpperCase()}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{t('Enable Farm').toUpperCase()}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  isTokenOnly?: boolean\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  isTokenOnly,\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = farm.isTokenOnly\n    ? `https://bscscan.com/token/${getAddress(farm.token.address)}`\n    : `https://bscscan.com/address/${lpAddress}`\n  const info = farm.isTokenOnly ? farm.token.projectLink : `https://pancakeswap.info/pair/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{isTokenOnly ? 'Token Project' : 'See Pair Info'}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { farm, details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} isTokenOnly={farm.isTokenOnly} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => (\n                <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              ))}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useState, useMemo } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback }) => {\n  const { t } = useTranslation()\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t('Search Farms')}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices, usePriceBnbBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport { getAddress } from 'utils/addressHelpers'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport PageHeader from 'components/PageHeader'\nimport Countdown from 'components/Countdown'\nimport { fetchFarmsPublicDataAsync, setLoadArchivedFarmsData } from 'state/farms'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport FarmImage from './components/FarmImage'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nexport interface FarmsProps {\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = ({ tokenMode }) => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.CARD, 'pancake_farm_view')\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const prices = useGetApiPrices()\n\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n\n  useEffect(() => {\n    // Makes the main scheduled fetching to request archived farms data\n    dispatch(setLoadArchivedFarmsData(isArchived))\n\n    // Immediately request data for archived farms so users don't have to wait\n    // 60 seconds for public data and 10 seconds for user data\n    if (isArchived) {\n      dispatch(fetchFarmsPublicDataAsync())\n      if (account) {\n        dispatch(fetchFarmUserDataAsync(account))\n      }\n    }\n  }, [isArchived, dispatch, account])\n\n  const activeFarms = farmsLP.filter(\n    (farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && !isArchivedPid(farm.pid),\n  )\n  const inactiveFarms = farmsLP.filter(\n    (farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && !isArchivedPid(farm.pid),\n  )\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken) {\n          return farm\n        }\n\n        const priceFromAPI = prices?.[getAddress(farm.quoteToken.address).toLowerCase()] || 0\n        let quoteTokenPriceUsd: number\n        switch (farm.quoteToken.symbol) {\n          case 'BUSD':\n            quoteTokenPriceUsd = 1\n            break\n          case 'BNB':\n          case 'wBNB':\n            quoteTokenPriceUsd = bnbPrice.toNumber()\n            break\n          default:\n            quoteTokenPriceUsd = priceFromAPI\n        }\n        quoteTokenPriceUsd = Math.min(quoteTokenPriceUsd, priceFromAPI)\n\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apr = isActive ? getFarmApr(farm.poolWeight, cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, bnbPrice, prices, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        image: <FarmImage farm={farm} size=\"sm\" />,\n        label: lpLabel,\n        pid: farm.pid,\n        isTokenOnly: farm.isTokenOnly,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)), // earnings in WS Token - always 18 decimals\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {tokenMode ? edition.poolPrimaryTitle : edition.farmPrimaryTitle}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {tokenMode ? edition.poolSecondaryTitle : edition.farmSecondaryTitle}\n        </Heading>\n      </PageHeader>\n      <Countdown />\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <div ref={loadMoreRef} />\n        {edition.bottomIllustration}\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { edition } from 'edition'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, tokenDecimals: number) => {\n  const powDecimals = tokenDecimals ? BIG_TEN.pow(tokenDecimals) : DEFAULT_TOKEN_DECIMAL\n\n  if (edition.referrals.enabled) {\n    return masterChefContract.methods\n      .deposit(pid, new BigNumber(amount).times(powDecimals).toString(), getReferralAddress())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(powDecimals).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, tokenDecimals: number) => {\n  const powDecimals = tokenDecimals ? BIG_TEN.pow(tokenDecimals) : DEFAULT_TOKEN_DECIMAL\n\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(tokenDecimals ?? DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(powDecimals).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking('0')\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  if (edition.referrals.enabled) {\n    return masterChefContract.methods\n      .deposit(pid, '0', getReferralAddress())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst getReferralAddress = () => {\n  const referralAddress = localStorage.getItem('ref')\n  return referralAddress && referralAddress.length === 42\n    ? referralAddress\n    : '0x000000000000000000000000000000000000dEaD'\n}\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  let apr = yearlyCakeRewardAllocation.times(cakePriceUsd).times(100)\n  if (poolLiquidityUsd.toNumber()) {\n    apr = apr.div(poolLiquidityUsd)\n  }\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","/* eslint-disable no-bitwise */\n\nimport React from 'react'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\n\nconst CountdownWrapper = styled.a`\n  display: flex;\n  justify-content: space-around;\n  font-family: sans-serif;\n  text-align: center;\n  padding-top: 20px;\n  width: 100%;\n  margin: 0 auto 32px;\n`\n\nconst EstimatedText = styled.div`\n  text-align: center;\n`\n\nconst BlockNumber = styled.p`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst minuteSeconds = 60\nconst hourSeconds = 3600\nconst daySeconds = 86400\n\nconst renderTime = (dimension, time) => (\n  <div>\n    <div style={{ fontSize: 32 }}>{time}</div>\n    <div>{dimension}</div>\n  </div>\n)\n\nconst getTimeSeconds = (time: number) => (minuteSeconds - time) | 0\nconst getTimeMinutes = (time: number) => ((time % hourSeconds) / minuteSeconds) | 0\nconst getTimeHours = (time: number) => ((time % daySeconds) / hourSeconds) | 0\nconst getTimeDays = (time: number) => (time / daySeconds) | 0\n\nexport default function Countdown() {\n  const now = Date.now()\n\n  const remainingSeconds = (edition.startTime.getTime() - now) / 1000\n  const days = Math.ceil(remainingSeconds / daySeconds)\n  const daysDuration = days * daySeconds\n  const { isXl } = useMatchBreakpoints()\n  const countdownUrl = `https://bscscan.com/block/countdown/${edition.startBlock}`\n\n  if (now > edition.startTime.getTime()) {\n    return <></>\n  }\n\n  const timerProps = {\n    isPlaying: true,\n    size: isXl ? 120 : 80,\n    strokeWidth: isXl ? 6 : 2,\n  }\n\n  return (\n    <>\n      <CountdownWrapper href={countdownUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#7E2E84\"\n          duration={daysDuration}\n          initialRemainingTime={remainingSeconds}\n        >\n          {({ elapsedTime }) => renderTime('days', getTimeDays(daysDuration - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#D14081\"\n          duration={daySeconds}\n          initialRemainingTime={remainingSeconds % daySeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > hourSeconds, 0]}\n        >\n          {({ elapsedTime }) => renderTime('hours', getTimeHours(daySeconds - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#EF798A\"\n          duration={hourSeconds}\n          initialRemainingTime={remainingSeconds % hourSeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > minuteSeconds, 0]}\n        >\n          {({ elapsedTime }) => renderTime('minutes', getTimeMinutes(hourSeconds - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#218380\"\n          duration={minuteSeconds}\n          initialRemainingTime={remainingSeconds % minuteSeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > 0, 0]}\n        >\n          {({ elapsedTime }) => renderTime('seconds', getTimeSeconds(elapsedTime))}\n        </CountdownCircleTimer>\n      </CountdownWrapper>\n      <EstimatedText>\n        <p style={{ color: 'white', marginBottom: 16 }}>\n          <strong>{edition.startTime.toString()}</strong>\n        </p>\n        <BlockNumber>\n          <a href={countdownUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Farming starts in Block #{edition.startBlock}\n          </a>\n        </BlockNumber>\n      </EstimatedText>\n    </>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}