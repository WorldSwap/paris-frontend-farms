{"version":3,"sources":["hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/EarnAPRCard.tsx","views/Home/components/EarnAssetCard.tsx","views/Home/components/WinCard.tsx","views/Home/Home.tsx","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","hooks/useHarvest.ts","utils/apr.ts","components/Countdown/index.tsx","../node_modules/lodash/max.js"],"names":["useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","capitalize","edition","tokenKeyMasterChef","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","fetchBalances","useAllEarnings","balances","setBalance","res","fetchAllBalances","Block","styled","div","CakeHarvestBalance","t","useTranslation","earningsSum","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","toNumber","cakePriceBusd","usePriceCakeBusd","earningsBusd","multipliedBy","CardValue","value","lineHeight","CardBusdValue","color","style","CakeWalletBalance","cakeBalance","useTokenBalance","getCakeAddress","busdBalance","getBalanceNumber","decimals","fontSize","StyledFarmStakingCard","Card","homeStakingCardBackground","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","scale","mb","src","tokenImage","alt","tokenSymbol","width","height","toUpperCase","id","disabled","length","onClick","count","UnlockButton","StyledLotteryCard","CardMidContent","Heading","attrs","LotteryCard","useGetLotteryHasDrawn","setRequestedClaim","useLotteryAllowance","useModal","PurchaseWarningModal","onPresentApprove","useTotalClaim","setLastUpdated","claimAmount","onMultiClaim","useMultiClaimLottery","wbnbBalance","getWbnbAddress","useApproval","handleApprove","requestedApproval","console","error","BuyTicketModal","max","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupply","cakePrice","burnedBalance","useBurnedBalance","cakeSupply","marketCap","times","prefix","tokenPerBlock","StyledTotalValueLockedCard","TotalValueLockedCard","totalValue","useTotalValue","size","mediaQueries","lg","EarnAPRCard","farmsLP","useFarms","data","prices","useGetApiPrices","highestApr","useMemo","aprs","multiplier","lpTotalInQuoteToken","quoteTokenPriceUsd","getAddress","quoteToken","toLowerCase","totalLiquidity","getFarmApr","poolWeight","maxApr","toLocaleString","maximumFractionDigits","exact","activeClassName","to","animation","variant","justifyContent","mt","EarnAssetCard","farms","bestFarms","orderBy","Number","liquidity","token","symbol","assets","Array","from","Set","slice","join","WinCard","Hero","homeHeroImg1","homeHeroImg2","Cards","BaseLayout","sm","CTACards","Home","Page","as","homeSecondaryTitle","Countdown","marginTop","FarmStakingCard","baseForOwn","require","baseEach","createBaseEach","module","exports","baseFor","keys","object","iteratee","isArrayLike","eachFunc","fromRight","collection","iterable","Object","baseOrderBy","isArray","iteratees","orders","guard","undefined","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","result","key","other","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","useHarvest","farmPid","dispatch","useAppDispatch","masterChefContract","useMasterchef","harvest","txHash","fetchFarmUserDataAsync","farmPids","harvestPromises","Promise","all","cakePriceUsd","poolLiquidityUsd","apr","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","isNaN","isFinite","CountdownWrapper","EstimatedText","BlockNumber","p","primary","hourSeconds","daySeconds","renderTime","dimension","time","now","Date","remainingSeconds","startTime","getTime","daysDuration","Math","ceil","isXl","useMatchBreakpoints","countdownUrl","startBlock","timerProps","isPlaying","strokeWidth","href","target","rel","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","marginBottom","toString","baseExtremum","baseGt"],"mappings":"2YA0CeA,EA3Ba,WAAO,IAAD,EACkBC,mBAA4B,IAD9C,mBACzBC,EADyB,KACNC,EADM,KAExBC,EAAYC,cAAZD,QACAE,EAAgBC,cAAhBD,YAqBR,OAnBAE,qBAAU,WAcJJ,GAbe,uCAAG,gCAAAK,EAAA,6DACdC,EAAQC,IAAYC,KAAI,SAACC,GAAD,MAAW,CACvCC,QAASC,cACTC,KAAK,UAAD,OAAYC,qBAAWC,IAAQC,qBACnCC,OAAQ,CAACP,EAAKQ,IAAKjB,OAJD,SAOKkB,YAAUJ,IAAQK,cAAeb,GAPtC,OAOdc,EAPc,OAQdC,EAAUd,IAAYC,KAAI,SAACC,EAAMa,GAAP,mBAAC,eAAsBb,GAAvB,IAA6Bc,QAAS,IAAIC,IAAUJ,EAAWE,SAE/FvB,EAAqBsB,GAVD,2CAAH,oDAcjBI,KAED,CAACzB,EAASE,IAENJ,G,SCJM4B,EA1BQ,WAAO,IAAD,EACI7B,mBAAS,IADb,mBACpB8B,EADoB,KACVC,EADU,KAEnB5B,EAAYC,cAAZD,QACAE,EAAgBC,cAAhBD,YAoBR,OAlBAE,qBAAU,WAaJJ,GAZkB,uCAAG,8BAAAK,EAAA,6DACjBC,EAAQC,IAAYC,KAAI,SAACC,GAAD,MAAW,CACvCC,QAASC,cACTC,KAAK,UAAD,OAAYC,qBAAWC,IAAQC,qBACnCC,OAAQ,CAACP,EAAKQ,IAAKjB,OAJE,SAOLkB,YAAUJ,IAAQK,cAAeb,GAP5B,OAOjBuB,EAPiB,OASvBD,EAAWC,GATY,2CAAH,oDAapBC,KAED,CAAC9B,EAASE,IAENyB,G,4CCpBHI,GAAQC,IAAOC,IAAV,oDAkCIC,GA9BY,WAAO,IACxBC,EAAMC,cAAND,EACAnC,EAAYC,cAAZD,QAEFqC,EADcX,IACYY,QAAO,SAACC,EAAOC,GAC7C,IAAMC,EAAgB,IAAIjB,IAAUgB,GACpC,OAAIC,EAAcC,GAAG,GACZH,EAEFA,EAAQE,EAAcR,IAAIU,KAAuBC,aACvD,GACGC,EAAgBC,cAChBC,EAAe,IAAIvB,IAAUa,GAAaW,aAAaH,GAAeD,WAE5E,OAAK5C,EASH,gBAAC+B,GAAD,WACE,eAACkB,EAAA,EAAD,CAAWC,MAAOb,EAAac,WAAW,SACxCN,EAAcH,GAAG,IAAM,eAACU,GAAA,EAAD,CAAeF,MAAOH,OAT/C,eAAC,KAAD,CAAMM,MAAM,eAAeC,MAAO,CAAEH,WAAY,QAAhD,SACGhB,EAAE,a,mBCEIoB,GAvBW,WAAO,IACvBpB,EAAMC,cAAND,EACFqB,EAAcC,aAAgBC,eAC9Bb,EAAgBC,cAChBa,EAAc,IAAInC,YAAUoC,aAAiBJ,IAAcR,aAAaH,GAAeD,WAG7F,OAFoB3C,cAAZD,QAWN,uCACE,eAACiD,EAAA,EAAD,CAAWC,MAAOU,aAAiBJ,GAAcK,SAAU,EAAGC,SAAS,OAAOX,WAAW,SACvFN,EAAcH,GAAG,GAA6C,wBAAxC,eAACU,GAAA,EAAD,CAAeF,MAAOS,OAT9C,eAAC,KAAD,CAAMN,MAAM,eAAeC,MAAO,CAAEH,WAAY,QAAhD,SACGhB,EAAE,aCVL4B,GAAwB/B,YAAOgC,IAAPhC,CAAH,sJACAlB,IAAQmD,2BAM7BlC,GAAQC,IAAOC,IAAV,oDAILiC,GAAYlC,IAAOmC,IAAV,oDAITC,GAAQpC,IAAOC,IAAV,+DACA,qBAAGoC,MAAkBC,OAAOC,cAIjCC,GAAUxC,IAAOC,IAAV,iDA8DEwC,GA1DW,WAAO,IAAD,EACI5E,oBAAS,GADb,mBACvB6E,EADuB,KACZC,EADY,KAEtB3E,EAAYC,cAAZD,QACAmC,EAAMC,cAAND,EAEFyC,EADmBhF,IACkBiF,QAAO,SAACC,GAAD,OAAiBA,EAAYvD,QAAQqB,WAAa,KAE5FmC,EAAaC,YAAcJ,EAAkBpE,KAAI,SAACyE,GAAD,OAAqBA,EAAgBhE,QAAtF8D,SAEFG,EAAkBC,sBAAW,sBAAC,sBAAA9E,EAAA,6DAClCsE,GAAa,GADqB,kBAG1BI,IAH0B,6EAOhCJ,GAAa,GAPmB,0EASjC,CAACI,IAEJ,OACE,eAAChB,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAASqB,MAAM,KAAKC,GAAG,OAAvB,SACGlD,EAAE,qBAEL,eAAC+B,GAAD,CAAWoB,IAAKxE,IAAQyE,WAAYC,IAAG,UAAK1E,IAAQ2E,YAAb,SAAiCC,MAAO,GAAIC,OAAQ,KAC3F,gBAAC,GAAD,WACE,gBAACvB,GAAD,WAAQtD,IAAQ2E,YAAYG,cAA5B,kBACA,eAAC,GAAD,OAEF,gBAAC,GAAD,WACE,gBAACxB,GAAD,WAAQtD,IAAQ2E,YAAYG,cAA5B,iBACA,eAAC,GAAD,OAEF,eAACpB,GAAD,UACGxE,EACC,eAAC,IAAD,CACE6F,GAAG,cACHC,SAAUlB,EAAkBmB,QAAU,GAAKrB,EAC3CsB,QAASd,EACTQ,MAAM,OAJR,SAMGhB,EAAS,qBACQ5D,IAAQ2E,YAAYG,eAClCzD,EAAE,wBAAyB,CACzB8D,MAAOrB,EAAkBmB,WAIjC,eAACG,EAAA,EAAD,CAAcR,MAAM,iB,sECjE1BS,GAAoBnE,YAAOgC,IAAPhC,CAAH,yKAWjBkC,IAJQlC,IAAOC,IAAV,oDAIOD,IAAOmC,IAAV,qDAiBTiC,IAbQpE,IAAOC,IAAV,+DACA,qBAAGoC,MAAkBC,OAAOC,cAIvBvC,IAAOC,IAAV,wGAQUD,YAAOqE,KAASC,MAAM,CAAElB,MAAO,MAA/BpD,CAAH,mDAyFLuE,GArFK,WACEtG,cAAZD,QACgBwG,eAFC,IAAD,EAGkB3G,oBAAS,GAH3B,mBAGH4G,GAHG,WAIhBtE,EAAMC,cAAND,EAJgB,GAKNuE,eACSC,aAAS,eAACC,GAAA,EAAD,MAA7BC,EANiB,sBAOgBC,eAAnBC,GAPG,EAOhBC,YAPgB,EAOHD,gBACbE,EAAiBC,eAAjBD,aAEFE,GADc1D,aAAgBC,eAChBD,aAAgB2D,gBAVZ,EAWqBC,aAAYR,GAXjC,KAWhBS,cAXgB,EAWDC,kBAEHpC,sBAAW,sBAAC,sBAAA9E,EAAA,sEAE5BoG,GAAkB,GAFU,SAGPQ,IAHO,gBAM1BR,GAAkB,GAClBM,KAP0B,gDAU5BS,QAAQC,MAAR,MAV4B,yDAY7B,CAACR,EAAcR,EAAmBM,IAoBdJ,aAAS,eAACe,GAAA,EAAD,CAAgBC,IAAKR,MA7C7B,oBA+CxB,OACE,eAAChB,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAASf,MAAM,KAAKC,GAAG,OAAvB,SACGlD,EAAE,2BAEL,eAAC,GAAD,CAAWmD,IAAI,qBAAqBE,IAAI,YAAYE,MAAO,GAAIC,OAAQ,KACvE,eAACS,GAAD,CAAgB/C,MAAM,UAAtB,SAAiClB,EAAE,uBChGrCyF,GAAkB5F,YAAOgC,IAAPhC,CAAH,yEAKf6F,GAAM7F,IAAOC,IAAV,oJA2CM6F,GAnCG,WACF1F,cAAND,EADe,IAEjB4F,EAAcC,eACdC,EAAYnF,cACZoF,EAAgBtE,aAAiBuE,aAAiBzE,gBAClD0E,EAAaL,EAAcnE,aAAiBmE,GAAeG,EAAgB,EAC3EG,EAAYJ,EAAUK,MAAMF,GAElC,OACE,eAACR,GAAD,UACE,gBAAC,IAAD,WACE,gBAAC,IAAD,CAASxC,MAAM,KAAKC,GAAG,OAAvB,UACGvE,IAAQ2E,YAAYG,cADvB,YAGA,gBAACiC,GAAD,WACE,eAAC,KAAD,CAAM/D,SAAS,OAAf,wBACA,eAACb,EAAA,EAAD,CAAWa,SAAS,OAAOZ,MAAOmF,EAAUzF,WAAYiB,SAAU,EAAG0E,OAAO,SAE9E,gBAACV,GAAD,WACE,gBAAC,KAAD,CAAM/D,SAAS,OAAf,mBAA6BhD,IAAQ2E,YAAYG,cAAjD,aACCwC,GAAc,eAACnF,EAAA,EAAD,CAAWa,SAAS,OAAOZ,MAAOkF,OAEnD,gBAACP,GAAD,WACE,gBAAC,KAAD,CAAM/D,SAAS,OAAf,mBAA6BhD,IAAQ2E,YAAYG,cAAjD,aACA,eAAC3C,EAAA,EAAD,CAAWa,SAAS,OAAOD,SAAU,EAAGX,MAAOgF,OAEjD,gBAACL,GAAD,WACE,gBAAC,KAAD,CAAM/D,SAAS,OAAf,iBAA2BhD,IAAQ2E,YAAYG,cAA/C,YACA,eAAC3C,EAAA,EAAD,CAAWa,SAAS,OAAOD,SAAU,EAAGX,MAAOpC,IAAQ0H,yBC7C3DC,GAA6BzG,YAAOgC,IAAPhC,CAAH,kFA2BjB0G,GArBc,WAC3B,IAAMC,EAAaC,cAEnB,OACE,eAACH,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAASI,KAAK,KAAKxD,GAAG,OAAtB,sCAGA,uCAGE,eAACpC,EAAA,EAAD,CAAWC,MAAOyF,EAAW/F,WAAY2F,OAAO,IAAI1E,SAAU,IAE9D,eAAC,KAAD,CAAMR,MAAM,aAAZ,iD,yCChBJU,GAAwB/B,YAAOgC,IAAPhC,CAAH,qNAKvB,qBAAGqC,MAAkByE,aAAaC,MAUhC3C,GAAiBpE,YAAOqE,KAASC,MAAM,CAAElB,MAAO,MAA/BpD,CAAH,kDAgDLgH,GA7CK,WAAO,IACjB7G,EAAMC,cAAND,EACM8G,EAAYC,cAAlBC,KACFC,EAASC,cACTpB,EAAYnF,cAEZwG,EAAaC,mBAAQ,WACzB,IAAMC,EAAOP,EAEVpE,QAAO,SAACpE,GAAD,OAAuB,IAAbA,EAAKQ,KAAiC,OAApBR,EAAKgJ,cACxCjJ,KAAI,SAACC,GACJ,GAAIA,EAAKiJ,qBAAuBN,EAAQ,CACtC,IAAMO,EAAqBP,EAAOQ,YAAWnJ,EAAKoJ,WAAWnJ,SAASoJ,eAChEC,EAAiB,IAAIvI,IAAUf,EAAKiJ,qBAAqBpB,MAAMqB,GACrE,OAAOK,aAAWvJ,EAAKwJ,WAAYhC,EAAW8B,GAEhD,OAAO,QAGLG,EAASvC,KAAI6B,GACnB,cAAOU,QAAP,IAAOA,OAAP,EAAOA,EAAQC,eAAe,QAAS,CAAEC,sBAAuB,MAC/D,CAACnC,EAAWgB,EAASG,IAExB,OACE,eAAC,GAAD,UACE,eAAC,KAAD,CAASiB,OAAK,EAACC,gBAAgB,SAASC,GAAG,SAAS1E,GAAG,eAAvD,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAASxC,MAAM,WAAW+B,MAAM,KAAhC,wBAGA,eAAC,GAAD,CAAgB/B,MAAM,UAAtB,SACGiG,EAAU,UAAMA,EAAN,aAAqBnH,EAAE,QAAW,eAAC,KAAD,CAAUqI,UAAU,QAAQC,QAAQ,OAAO9E,OAAO,WAEjG,gBAAC,IAAD,CAAM+E,eAAe,gBAArB,UACE,eAAC,IAAD,CAASrH,MAAM,WAAW+B,MAAM,KAAhC,sBAGA,eAAC,IAAD,CAAkBuF,GAAI,GAAItH,MAAM,uB,qBCzDtCU,GAAwB/B,YAAOgC,IAAPhC,CAAH,qQAKvB,qBAAGqC,MAAkByE,aAAaC,MAUhC3C,GAAiBpE,YAAOqE,KAASC,MAAM,CAAElB,MAAO,MAA/BpD,CAAH,kDAkCL4I,GA9BO,WAAO,IACbC,EAAU3B,cAAhBC,KAMF2B,EAL2BC,KAC/BF,GACA,SAACpK,GAAD,OAA+BuK,OAAOvK,EAAKwK,aAC3C,OAEiCzK,KAAI,SAACC,GAAD,OAAUA,EAAKyK,MAAMC,UACtDC,EAASC,MAAMC,KAAK,IAAIC,IAAIT,IAAYU,MAAM,EAAG,GAAGC,KAAK,MAE/D,OACE,eAAC,GAAD,UACE,eAAC,KAAD,CAASpB,OAAK,EAACC,gBAAgB,SAASC,GAAG,SAAS1E,GAAG,WAAvD,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAASxC,MAAM,WAAW+B,MAAM,KAAhC,mBAGA,eAAC,GAAD,CAAgB/B,MAAM,mBAAtB,SAA0C+H,IAC1C,gBAAC,IAAD,CAAMV,eAAe,gBAArB,UACE,eAAC,IAAD,CAASrH,MAAM,WAAW+B,MAAM,KAAhC,sBAGA,eAAC,IAAD,CAAkBuF,GAAI,GAAItH,MAAM,uBC5CtCU,GAAwB/B,YAAOgC,IAAPhC,CAAH,qNAKvB,qBAAGqC,MAAkByE,aAAaC,MAUhC3C,GAAiBpE,YAAOqE,KAASC,MAAM,CAAElB,MAAO,MAA/BpD,CAAH,kDAwBL0J,GArBC,WAAO,IACbvJ,EAAMC,cAAND,EAER,OACE,eAAC,GAAD,UACE,eAAC,KAAD,CAASkI,OAAK,EAACC,gBAAgB,SAASC,GAAG,IAAI1E,GAAG,kBAAlD,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAASxC,MAAM,WAAW+B,MAAM,KAAhC,SACGjD,EAAE,aAEL,eAAC,GAAD,CAAgBkB,MAAM,UAAtB,SAAiClB,EAAE,iBACnC,gBAAC,IAAD,CAAMuI,eAAe,gBAArB,UACE,eAAC,IAAD,CAASrH,MAAM,WAAW+B,MAAM,OAChC,eAAC,IAAD,CAAkBuF,GAAI,GAAItH,MAAM,uB,UCvBtCsI,GAAO3J,IAAOC,IAAV,+aAYN,qBAAGoC,MAAkByE,aAAaC,KACTjI,IAAQ8K,aAAwB9K,IAAQ+K,cAO/DC,GAAQ9J,YAAO+J,IAAP/J,CAAH,kXAWP,qBAAGqC,MAAkByE,aAAakD,MAMlC,qBAAG3H,MAAkByE,aAAaC,MAUhCkD,GAAWjK,YAAO+J,IAAP/J,CAAH,iUASV,qBAAGqC,MAAkByE,aAAakD,MAMlC,qBAAG3H,MAAkByE,aAAaC,MAuCvBmD,GA7BQ,WACrB,OACE,gBAACC,EAAA,EAAD,WACE,gBAACR,GAAD,WACE,eAAC,IAAD,CAASS,GAAG,KAAKhH,MAAM,KAAKC,GAAG,OAAOhC,MAAM,YAA5C,wBAGA,eAAC,KAAD,UAAOvC,IAAQuL,wBAEjB,eAACC,GAAA,EAAD,IACA,uBAAKhJ,MAAO,CAAEiJ,UAAW,IAAzB,UACE,gBAACT,GAAD,WACE,eAACU,GAAD,IACA,eAAC,GAAD,OAEF,gBAACP,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,OAEF,gBAACH,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,e,oBC5GV,IAAIW,EAAaC,EAAQ,KAWrBC,EAViBD,EAAQ,IAUdE,CAAeH,GAE9BI,EAAOC,QAAUH,G,oBCbjB,IAAII,EAAUL,EAAQ,KAClBM,EAAON,EAAQ,KAcnBG,EAAOC,QAJP,SAAoBG,EAAQC,GAC1B,OAAOD,GAAUF,EAAQE,EAAQC,EAAUF,K,oBCZ7C,IAAIG,EAAcT,EAAQ,KA+B1BG,EAAOC,QArBP,SAAwBM,EAAUC,GAChC,OAAO,SAASC,EAAYJ,GAC1B,GAAkB,MAAdI,EACF,OAAOA,EAET,IAAKH,EAAYG,GACf,OAAOF,EAASE,EAAYJ,GAM9B,IAJA,IAAInH,EAASuH,EAAWvH,OACpBzE,EAAQ+L,EAAYtH,GAAU,EAC9BwH,EAAWC,OAAOF,IAEdD,EAAY/L,MAAYA,EAAQyE,KACa,IAA/CmH,EAASK,EAASjM,GAAQA,EAAOiM,KAIvC,OAAOD,K,oBC3BX,IAAIG,EAAcf,EAAQ,KACtBgB,EAAUhB,EAAQ,IA6CtBG,EAAOC,QAdP,SAAiBQ,EAAYK,EAAWC,EAAQC,GAC9C,OAAkB,MAAdP,EACK,IAEJI,EAAQC,KACXA,EAAyB,MAAbA,EAAoB,GAAK,CAACA,IAGnCD,EADLE,EAASC,OAAQC,EAAYF,KAE3BA,EAAmB,MAAVA,EAAiB,GAAK,CAACA,IAE3BH,EAAYH,EAAYK,EAAWC,M,oBC3C5C,IAAIG,EAAWrB,EAAQ,KACnBsB,EAAUtB,EAAQ,KAClBuB,EAAevB,EAAQ,KACvBwB,EAAUxB,EAAQ,KAClByB,EAAazB,EAAQ,KACrB0B,EAAY1B,EAAQ,KACpB2B,EAAkB3B,EAAQ,KAC1B4B,EAAW5B,EAAQ,KACnBgB,EAAUhB,EAAQ,IAwCtBG,EAAOC,QA7BP,SAAqBQ,EAAYK,EAAWC,GAExCD,EADEA,EAAU5H,OACAgI,EAASJ,GAAW,SAAST,GACvC,OAAIQ,EAAQR,GACH,SAAShK,GACd,OAAO8K,EAAQ9K,EAA2B,IAApBgK,EAASnH,OAAemH,EAAS,GAAKA,IAGzDA,KAGG,CAACoB,GAGf,IAAIhN,GAAS,EACbqM,EAAYI,EAASJ,EAAWS,EAAUH,IAE1C,IAAIM,EAASL,EAAQZ,GAAY,SAASpK,EAAOsL,EAAKlB,GAIpD,MAAO,CAAE,SAHMS,EAASJ,GAAW,SAAST,GAC1C,OAAOA,EAAShK,MAEa,QAAW5B,EAAO,MAAS4B,MAG5D,OAAOiL,EAAWI,GAAQ,SAAStB,EAAQwB,GACzC,OAAOJ,EAAgBpB,EAAQwB,EAAOb,Q,oBC5C1C,IAAIjB,EAAWD,EAAQ,KACnBS,EAAcT,EAAQ,KAoB1BG,EAAOC,QAVP,SAAiBQ,EAAYJ,GAC3B,IAAI5L,GAAS,EACTiN,EAASpB,EAAYG,GAAcjC,MAAMiC,EAAWvH,QAAU,GAKlE,OAHA4G,EAASW,GAAY,SAASpK,EAAOsL,EAAKlB,GACxCiB,IAASjN,GAAS4L,EAAShK,EAAOsL,EAAKlB,MAElCiB,I,kBCET1B,EAAOC,QAVP,SAAoB4B,EAAOC,GACzB,IAAI5I,EAAS2I,EAAM3I,OAGnB,IADA2I,EAAME,KAAKD,GACJ5I,KACL2I,EAAM3I,GAAU2I,EAAM3I,GAAQ7C,MAEhC,OAAOwL,I,oBCjBT,IAAIG,EAAmBnC,EAAQ,KA2C/BG,EAAOC,QA3BP,SAAyBG,EAAQwB,EAAOb,GAOtC,IANA,IAAItM,GAAS,EACTwN,EAAc7B,EAAO8B,SACrBC,EAAcP,EAAMM,SACpBhJ,EAAS+I,EAAY/I,OACrBkJ,EAAerB,EAAO7H,SAEjBzE,EAAQyE,GAAQ,CACvB,IAAIwI,EAASM,EAAiBC,EAAYxN,GAAQ0N,EAAY1N,IAC9D,GAAIiN,EACF,OAAIjN,GAAS2N,EACJV,EAGFA,GAAmB,QADdX,EAAOtM,IACiB,EAAI,GAU5C,OAAO2L,EAAO3L,MAAQmN,EAAMnN,Q,oBCxC9B,IAAI4N,EAAWxC,EAAQ,KAwCvBG,EAAOC,QA9BP,SAA0B5J,EAAOuL,GAC/B,GAAIvL,IAAUuL,EAAO,CACnB,IAAIU,OAAyBrB,IAAV5K,EACfkM,EAAsB,OAAVlM,EACZmM,EAAiBnM,IAAUA,EAC3BoM,EAAcJ,EAAShM,GAEvBqM,OAAyBzB,IAAVW,EACfe,EAAsB,OAAVf,EACZgB,EAAiBhB,IAAUA,EAC3BiB,EAAcR,EAAST,GAE3B,IAAMe,IAAcE,IAAgBJ,GAAepM,EAAQuL,GACtDa,GAAeC,GAAgBE,IAAmBD,IAAcE,GAChEN,GAAaG,GAAgBE,IAC5BN,GAAgBM,IACjBJ,EACH,OAAO,EAET,IAAMD,IAAcE,IAAgBI,GAAexM,EAAQuL,GACtDiB,GAAeP,GAAgBE,IAAmBD,IAAcE,GAChEE,GAAaL,GAAgBE,IAC5BE,GAAgBF,IACjBI,EACH,OAAQ,EAGZ,OAAO,I,yLC9BIE,EAAa,SAACC,GACzB,IAAMC,EAAWC,cACT9P,EAAYC,cAAZD,QACF+P,EAAqBC,cAQ3B,MAAO,CAAEjL,SANaI,sBAAW,sBAAC,4BAAA9E,EAAA,sEACX4P,YAAQF,EAAoBH,EAAS5P,GAD1B,cAC1BkQ,EAD0B,OAEhCL,EAASM,YAAuBnQ,IAFA,kBAGzBkQ,GAHyB,2CAI/B,CAAClQ,EAAS6P,EAAUD,EAASG,MAKrB/K,EAAgB,SAACoL,GAAwB,IAC5CpQ,EAAYC,cAAZD,QACF+P,EAAqBC,cAU3B,MAAO,CAAEjL,SARaI,sBAAW,sBAAC,4BAAA9E,EAAA,6DAC1BgQ,EAAkBD,EAAS9N,QAAO,SAACC,EAAOtB,GAC9C,MAAM,GAAN,mBAAWsB,GAAX,CAAkB0N,YAAQF,EAAoB9O,EAAKjB,OAClD,IAH6B,kBAKzBsQ,QAAQC,IAAIF,IALa,2CAM/B,CAACrQ,EAASoQ,EAAUL,O,iCC/BzB,qDA8Ba/F,EAAa,SAACC,EAAuBuG,EAAyBC,GACzE,IACIC,EAD+BC,IAAerI,MAAMsI,KAAiBtI,MAAM2B,GAC1C3B,MAAMkI,GAAclI,MAAM,KAI/D,OAHImI,EAAiB7N,aACnB8N,EAAMA,EAAIzO,IAAIwO,IAETC,EAAIG,UAAYH,EAAII,WAAa,KAAOJ,EAAI9N,a,0IC5B/CmO,EAAmB/O,IAAO3B,EAAV,iMAUhB2Q,EAAgBhP,IAAOC,IAAV,mDAIbgP,EAAcjP,IAAOkP,EAAV,2CACN,qBAAG7M,MAAkBC,OAAO6M,WAIjCC,EAAc,KACdC,EAAa,MAEbC,EAAa,SAACC,EAAWC,GAAZ,OACjB,gCACE,qBAAKlO,MAAO,CAAEQ,SAAU,IAAxB,SAA+B0N,IAC/B,8BAAMD,QASK,SAASjF,IACtB,IAAMmF,EAAMC,KAAKD,MAEXE,GAAoB7Q,IAAQ8Q,UAAUC,UAAYJ,GAAO,IAEzDK,EADOC,KAAKC,KAAKL,EAAmBN,GACdA,EACpBY,EAASC,eAATD,KACFE,EAAY,8CAA0CrR,IAAQsR,YAEpE,GAAIX,EAAM3Q,IAAQ8Q,UAAUC,UAC1B,OAAO,6BAGT,IAAMQ,EAAa,CACjBC,WAAW,EACXzJ,KAAMoJ,EAAO,IAAM,GACnBM,YAAaN,EAAO,EAAI,GAG1B,OACE,qCACE,eAAClB,EAAD,CAAkByB,KAAML,EAAcM,OAAO,SAASC,IAAI,sBAA1D,UACE,cAAC,uBAAD,2BACML,GADN,IAEE/N,OAAO,UACPqO,SAAUb,EACVc,qBAAsBjB,EAJxB,SAMG,gBAAGkB,EAAH,EAAGA,YAAH,OAAqBvB,EAAW,QAAoBQ,EAAee,GA9BhCxB,EAAc,OAgCpD,cAAC,uBAAD,2BACMgB,GADN,IAEE/N,OAAO,UACPqO,SAAUtB,EACVuB,qBAAsBjB,EAAmBN,EACzCyB,WAAY,SAACC,GAAD,MAAsB,CAACpB,EAAmBoB,EAAmB3B,EAAa,IALxF,SAOG,gBAAGyB,EAAH,EAAGA,YAAH,OAAqBvB,EAAW,SAAsBD,EAAawB,GAxC9BxB,EAAcD,EAAe,OA0CrE,cAAC,uBAAD,2BACMiB,GADN,IAEE/N,OAAO,UACPqO,SAAUvB,EACVwB,qBAAsBjB,EAAmBP,EACzC0B,WAAY,SAACC,GAAD,MAAsB,CAACpB,EAAmBoB,EA5D1C,GA4D4E,IAL1F,SAOG,gBAAGF,EAAH,EAAGA,YAAH,OAAqBvB,EAAW,WAA0BF,EAAcyB,GAlDjCzB,EAZ5B,GAY4D,OAoD1E,cAAC,uBAAD,2BACMiB,GADN,IAEE/N,OAAO,UACPqO,SAnEY,GAoEZC,qBAAsBjB,EApEV,GAqEZmB,WAAY,SAACC,GAAD,MAAsB,CAACpB,EAAmBoB,EAAmB,EAAG,IAL9E,SAOG,gBAAGF,EAAH,EAAGA,YAAH,OAAqBvB,EAAW,UAvErB,GAuE+CuB,EA5DH,UA+D5D,eAAC7B,EAAD,WACE,mBAAG1N,MAAO,CAAED,MAAO,QAAS2P,aAAc,IAA1C,SACE,iCAASlS,IAAQ8Q,UAAUqB,eAE7B,cAAChC,EAAD,UACE,oBAAGuB,KAAML,EAAcM,OAAO,SAASC,IAAI,sBAA3C,sCAC4B5R,IAAQsR,wB,oBC1G9C,IAAIc,EAAexG,EAAQ,KACvByG,EAASzG,EAAQ,KACjB4B,EAAW5B,EAAQ,KA0BvBG,EAAOC,QANP,SAAa4B,GACX,OAAQA,GAASA,EAAM3I,OACnBmN,EAAaxE,EAAOJ,EAAU6E,QAC9BrF","file":"static/js/9.dd7ef4fc.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { capitalize } from 'lodash'\nimport { edition } from 'edition'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: `pending${capitalize(edition.tokenKeyMasterChef)}`,\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(edition.masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { capitalize } from 'lodash'\nimport { edition } from 'edition'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: `pending${capitalize(edition.tokenKeyMasterChef)}`,\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(edition.masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\nconst CakeHarvestBalance = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning)\n    if (earningNumber.eq(0)) {\n      return accum\n    }\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n  }, 0)\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      {!cakePriceBusd.eq(0) && <CardBusdValue value={earningsBusd} />}\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const { t } = useTranslation()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const cakePriceBusd = usePriceCakeBusd()\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      {!cakePriceBusd.eq(0) ? <CardBusdValue value={busdBalance} /> : <br />}\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { edition } from 'edition'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('${edition.homeStakingCardBackground}');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Farms & Staking')}\n        </Heading>\n        <CardImage src={edition.tokenImage} alt={`${edition.tokenSymbol} logo`} width={64} height={64} />\n        <Block>\n          <Label>{edition.tokenSymbol.toUpperCase()} to Harvest:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{edition.tokenSymbol.toUpperCase()} in Wallet:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? `Collecting ${edition.tokenSymbol.toUpperCase()}`\n                : t('Harvest all (%count%)', {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { edition } from 'edition'\nimport { getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport tokens from 'config/constants/tokens'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useApproval } from 'hooks/useApproval'\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal'\nimport BuyTicketModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeWinnings from './CakeWinnings'\nimport LotteryJackpot from './LotteryJackpot'\n\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`\n\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst LotteryCard = () => {\n  const { account } = useWeb3React()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requestClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const allowance = useLotteryAllowance()\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const wbnbBalance = useTokenBalance(getWbnbAddress())\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n        setLastUpdated()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, setLastUpdated])\n\n  const renderLotteryTicketButtonBuyOrApprove = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n          Approve {edition.tokenSymbol.toUpperCase()}\n        </Button>\n      )\n    }\n    if (lotteryHasDrawn) {\n      return <Button disabled> {t('On sale soon')}</Button>\n    }\n    return (\n      <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy}>\n        {t('Buy Tickets')}\n      </Button>\n    )\n  }\n\n  const [onPresentBuy] = useModal(<BuyTicketModal max={wbnbBalance} />)\n\n  return (\n    <StyledLotteryCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Your Lottery Winnings')}\n        </Heading>\n        <CardImage src=\"/images/ticket.svg\" alt=\"cake logo\" width={64} height={64} />\n        <CardMidContent color=\"#7645d9\">{t('Coming Soon')}</CardMidContent>\n        {/* <Block>\n          <Label>{edition.tokenSymbol.toUpperCase()} to Collect:</Label>\n          <CakeWinnings claimAmount={claimAmount} />\n        </Block>\n        <Block>\n          <Label>{t('Total jackpot this round')}:</Label>\n          <LotteryJackpot />\n        </Block>\n        {account ? (\n          <Actions>\n            <Button\n              id=\"dashboard-collect-winnings\"\n              disabled={getBalanceNumber(claimAmount) === 0 || requestClaim}\n              onClick={handleClaim}\n              style={{ marginRight: '8px' }}\n            >\n              {t('Collect Winnings')}\n            </Button>\n            {renderLotteryTicketButtonBuyOrApprove()}\n          </Actions>\n        ) : (\n          <Actions>\n            <UnlockButton width=\"100%\" />\n          </Actions>\n        )} */}\n      </CardBody>\n    </StyledLotteryCard>\n  )\n}\n\nexport default LotteryCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const cakePrice = usePriceCakeBusd()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n  const marketCap = cakePrice.times(cakeSupply)\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {edition.tokenSymbol.toUpperCase()} Stats\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">Market Cap</Text>\n          <CardValue fontSize=\"14px\" value={marketCap.toNumber()} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Total {edition.tokenSymbol.toUpperCase()} Supply</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Total {edition.tokenSymbol.toUpperCase()} Burned</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">New {edition.tokenSymbol.toUpperCase()}/block</Text>\n          <CardValue fontSize=\"14px\" decimals={1} value={edition.tokenPerBlock} />\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTotalValue } from 'state/hooks'\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst TotalValueLockedCard = () => {\n  const totalValue = useTotalValue()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          Total Value Locked (TVL)\n        </Heading>\n        <>\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\n          {/* <Heading size=\"xl\"> */}\n          <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={2} />\n          {/* </Heading> */}\n          <Text color=\"textSubtle\">Across all Farms and Pools</Text>\n        </>\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pancakeswap/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApr } from 'utils/apr'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPRCard = () => {\n  const { t } = useTranslation()\n  const { data: farmsLP } = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApr = useMemo(() => {\n    const aprs = farmsLP\n      // Filter inactive farms, because their theoretical APR is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {\n          const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApr(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApr = max(aprs)\n    return maxApr?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apr-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            Earn up to\n          </Heading>\n          <CardMidContent color=\"#7645d9\">\n            {highestApr ? `${highestApr}% ${t('APR')}` : <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />}\n          </CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              in Farms\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPRCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { Farm } from 'state/types'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useFarms } from 'state/hooks'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#69aefe, #f3acf4);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst EarnAssetCard = () => {\n  const { data: farms } = useFarms()\n  const farmsByLiquidity: Farm[] = orderBy(\n    farms,\n    (farm: FarmWithStakedValue) => Number(farm.liquidity),\n    'asc',\n  ) as Farm[]\n  const bestFarms = farmsByLiquidity.map((farm) => farm.token.symbol)\n  const assets = Array.from(new Set(bestFarms)).slice(0, 6).join(', ')\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/pools\" id=\"pool-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            Stake\n          </Heading>\n          <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              in Pools\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst WinCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/\" id=\"lottery-pot-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {t('Lottery')}\n          </Heading>\n          <CardMidContent color=\"#7645d9\">{t('Coming Soon')}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\" />\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default WinCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pancakeswap/uikit'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\nimport { edition } from 'edition'\nimport Countdown from 'components/Countdown'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 0;\n  padding-top: 0;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('${edition.homeHeroImg1}'), url('${edition.homeHeroImg2}');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color=\"secondary\">\n          World Swap\n        </Heading>\n        <Text>{edition.homeSecondaryTitle}</Text>\n      </Hero>\n      <Countdown />\n      <div style={{ marginTop: 64 }}>\n        <Cards>\n          <FarmStakingCard />\n          <LotteryCard />\n        </Cards>\n        <CTACards>\n          <EarnAPRCard />\n          <EarnAssetCard />\n          <WinCard />\n        </CTACards>\n        <Cards>\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  let apr = yearlyCakeRewardAllocation.times(cakePriceUsd).times(100)\n  if (poolLiquidityUsd.toNumber()) {\n    apr = apr.div(poolLiquidityUsd)\n  }\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","/* eslint-disable no-bitwise */\n\nimport React from 'react'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\n\nconst CountdownWrapper = styled.a`\n  display: flex;\n  justify-content: space-around;\n  font-family: sans-serif;\n  text-align: center;\n  padding-top: 20px;\n  width: 100%;\n  margin: 0 auto 32px;\n`\n\nconst EstimatedText = styled.div`\n  text-align: center;\n`\n\nconst BlockNumber = styled.p`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst minuteSeconds = 60\nconst hourSeconds = 3600\nconst daySeconds = 86400\n\nconst renderTime = (dimension, time) => (\n  <div>\n    <div style={{ fontSize: 32 }}>{time}</div>\n    <div>{dimension}</div>\n  </div>\n)\n\nconst getTimeSeconds = (time: number) => (minuteSeconds - time) | 0\nconst getTimeMinutes = (time: number) => ((time % hourSeconds) / minuteSeconds) | 0\nconst getTimeHours = (time: number) => ((time % daySeconds) / hourSeconds) | 0\nconst getTimeDays = (time: number) => (time / daySeconds) | 0\n\nexport default function Countdown() {\n  const now = Date.now()\n\n  const remainingSeconds = (edition.startTime.getTime() - now) / 1000\n  const days = Math.ceil(remainingSeconds / daySeconds)\n  const daysDuration = days * daySeconds\n  const { isXl } = useMatchBreakpoints()\n  const countdownUrl = `https://bscscan.com/block/countdown/${edition.startBlock}`\n\n  if (now > edition.startTime.getTime()) {\n    return <></>\n  }\n\n  const timerProps = {\n    isPlaying: true,\n    size: isXl ? 120 : 80,\n    strokeWidth: isXl ? 6 : 2,\n  }\n\n  return (\n    <>\n      <CountdownWrapper href={countdownUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#7E2E84\"\n          duration={daysDuration}\n          initialRemainingTime={remainingSeconds}\n        >\n          {({ elapsedTime }) => renderTime('days', getTimeDays(daysDuration - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#D14081\"\n          duration={daySeconds}\n          initialRemainingTime={remainingSeconds % daySeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > hourSeconds, 0]}\n        >\n          {({ elapsedTime }) => renderTime('hours', getTimeHours(daySeconds - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#EF798A\"\n          duration={hourSeconds}\n          initialRemainingTime={remainingSeconds % hourSeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > minuteSeconds, 0]}\n        >\n          {({ elapsedTime }) => renderTime('minutes', getTimeMinutes(hourSeconds - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#218380\"\n          duration={minuteSeconds}\n          initialRemainingTime={remainingSeconds % minuteSeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > 0, 0]}\n        >\n          {({ elapsedTime }) => renderTime('seconds', getTimeSeconds(elapsedTime))}\n        </CountdownCircleTimer>\n      </CountdownWrapper>\n      <EstimatedText>\n        <p style={{ color: 'white', marginBottom: 16 }}>\n          <strong>{edition.startTime.toString()}</strong>\n        </p>\n        <BlockNumber>\n          <a href={countdownUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Farming starts in Block #{edition.startBlock}\n          </a>\n        </BlockNumber>\n      </EstimatedText>\n    </>\n  )\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n"],"sourceRoot":""}