{"version":3,"sources":["hooks/useTokenBalance.ts","hooks/useTickets.ts","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","utils/callHelpers.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","hooks/useAllowance.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useGetLotteryHasDrawn.ts","utils/lotteryUtils.ts","hooks/useApprove.ts","hooks/useBuyLottery.ts","hooks/useApproval.ts","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getCakeContract","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","BIG_ZERO","balance","setBalance","web3","useWeb3","contract","getBep20Contract","balanceOf","res","fetchBalance","useGetBnbBalance","account","useWeb3React","useLastUpdated","lastUpdated","setLastUpdated","eth","getBalance","walletBalance","refresh","useTokenBalance","fastRefresh","useTotalRewards","rewards","setRewards","lotteryContract","useLottery","getTotalRewards","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","ticketsContract","useLotteryTicket","useCallback","getTotalClaim","claim","useWinningNumbers","winningNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbers","useTickets","lotteryNumber","tickets","setTickets","getTickets","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","value","ref","useRef","current","approve","lpContract","masterChefContract","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","tokenDecimals","powDecimals","BIG_TEN","pow","DEFAULT_TOKEN_DECIMAL","edition","referrals","enabled","deposit","times","toString","getReferralAddress","on","tx","transactionHash","sousStake","sousChefContract","decimals","sousStakeBnb","unstake","withdraw","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","harvest","soushHarvest","soushHarvestBnb","referralAddress","localStorage","getItem","length","CardValue","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","style","CardBusdValue","props","useLotteryAllowance","allowance","setAllowance","wbnbContract","useWBNB","getLotteryAddress","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency","console","error","fetch","StyledSpacer","styled","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","getLotteryStatus","state","fetchLotteryStatus","multiCall","abi","calls","getWeb3NoAccount","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finalTokenIds","r","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","LOTTERY_TICKET_PRICE","toNumber","parseInt","historyNumbers","useApprove","dispatch","useAppDispatch","useMasterchef","onApprove","fetchFarmUserDataAsync","useLotteryApprove","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","max","setMax","fetchMax","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","handleApprove","TicketsList","primary","WarningModal","onDismiss","t","useTranslation","title","width","onClick","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","symbol","availableSymbol","onChange","onSelectMax","alignItems","type","inputMode","min","placeholder","scale","num","toLocaleString","Tips","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getBalanceNumber","maxTickets","getFullDisplayBalance","handleBuy","Math","floor","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","validity","valid","toUpperCase","lotteryPrice","Announce","Final","variant","disabled","isInteger"],"mappings":"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","file":"static/js/1.e7427603.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { edition } from 'edition'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, tokenDecimals: number) => {\n  const powDecimals = tokenDecimals ? BIG_TEN.pow(tokenDecimals) : DEFAULT_TOKEN_DECIMAL\n\n  if (edition.referrals.enabled) {\n    return masterChefContract.methods\n      .deposit(pid, new BigNumber(amount).times(powDecimals).toString(), getReferralAddress())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(powDecimals).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, tokenDecimals: number) => {\n  const powDecimals = tokenDecimals ? BIG_TEN.pow(tokenDecimals) : DEFAULT_TOKEN_DECIMAL\n\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(tokenDecimals ?? DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(powDecimals).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking('0')\n  //     .send({ from: account })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  if (edition.referrals.enabled) {\n    return masterChefContract.methods\n      .deposit(pid, '0', getReferralAddress())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst getReferralAddress = () => {\n  const referralAddress = localStorage.getItem('ref')\n  return referralAddress && referralAddress.length === 42\n    ? referralAddress\n    : '0x000000000000000000000000000000000000dEaD'\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useCake, useWBNB } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  // const cakeContract = useCake()\n  const wbnbContract = useWBNB()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await wbnbContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, wbnbContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery, useWBNB } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  // const cakeContract = useCake()\n  const wbnbContract = useWBNB()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(wbnbContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, wbnbContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {t('Lottery ticket purchases are final.')}\n        <br />\n        Your WBNB will not be returned to you after you spend it to buy tickets.\n        <br />\n        {t('Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {t(\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {t('I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex alignItems=\"center\">\n        <Input type=\"number\" inputMode=\"numeric\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledSpacer />\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <Button scale=\"sm\" onClick={onSelectMax}>\n            {t('Max')}\n          </Button>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>\n        {t('%num% %symbol% Available', { num: max.toLocaleString(), symbol: availableSymbol })}\n      </StyledMaxText>\n    </>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { edition } from 'edition'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport { useTranslation } from 'contexts/Localization'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onDismiss?: () => void\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getBalanceNumber(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const wbnbCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={t('Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={t('Ticket').toUpperCase()}\n        availableSymbol=\"WBNB\"\n      />\n      <div>\n        <Tips>{t(`1 Ticket = %lotteryPrice% WBNB`, { lotteryPrice: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>Ticket purchases are final. Your WBNB cannot be returned to you after buying tickets.</Announce>\n        <Final>{t(`You will spend: %num% WBNB`, { num: wbnbCosts(val) })}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n"],"sourceRoot":""}