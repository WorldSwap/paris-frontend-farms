{"version":3,"sources":["hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","hooks/useGetLotteryHasDrawn.ts","hooks/useApproval.ts","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/EarnAPRCard.tsx","views/Home/components/EarnAssetCard.tsx","views/Home/components/WinCard.tsx","views/Home/Home.tsx","hooks/useLastUpdated.ts","hooks/useTokenBalance.ts","hooks/usePreviousValue.ts","views/Home/components/CardValue.tsx","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseEach.js","utils/callHelpers.ts","utils/lotteryUtils.ts","hooks/useTickets.ts","views/Home/components/CardBusdValue.tsx","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","hooks/useBuyLottery.ts","hooks/useAllowance.ts","hooks/useApprove.ts","utils/apr.ts","components/Countdown/index.tsx","../node_modules/lodash/max.js"],"names":["useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","capitalize","edition","tokenKeyMasterChef","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","fetchBalances","useAllEarnings","balances","setBalance","res","fetchAllBalances","Block","styled","div","CakeHarvestBalance","t","useTranslation","earningsSum","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","toNumber","cakePriceBusd","usePriceCakeBusd","earningsBusd","multipliedBy","CardValue","value","lineHeight","CardBusdValue","color","style","CakeWalletBalance","cakeBalance","useTokenBalance","getCakeAddress","busdBalance","getBalanceNumber","decimals","fontSize","StyledFarmStakingCard","Card","homeStakingCardBackground","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","scale","mb","src","tokenImage","alt","tokenSymbol","width","height","toUpperCase","id","disabled","length","onClick","count","UnlockButton","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","lotteryContract","useLottery","getLotteryStatus","state","fetchLotteryStatus","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","console","error","TicketsList","props","primary","WarningModal","onDismiss","title","ModalActions","StyledSpacer","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","alignItems","type","inputMode","min","placeholder","num","toLocaleString","BuyTicketModal","amount","val","setVal","setRequestedBuy","fullBalance","useMemo","maxTickets","parseInt","getFullDisplayBalance","LOTTERY_TICKET_PRICE","onMultiBuy","useMultiBuyLottery","maxNumber","useMaxNumber","handleBuy","numbers","Array","apply","Math","floor","random","toString","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","validity","valid","Tips","lotteryPrice","Announce","Final","variant","isInteger","StyledLotteryCard","CardMidContent","Heading","attrs","LotteryCard","setRequestedClaim","useLotteryAllowance","useModal","PurchaseWarningModal","useTotalClaim","setLastUpdated","claimAmount","onMultiClaim","useMultiClaimLottery","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupply","cakePrice","burnedBalance","useBurnedBalance","cakeSupply","marketCap","times","prefix","tokenPerBlock","StyledTotalValueLockedCard","TotalValueLockedCard","totalValue","useTotalValue","size","mediaQueries","lg","EarnAPRCard","farmsLP","useFarms","data","prices","useGetApiPrices","highestApr","aprs","multiplier","lpTotalInQuoteToken","quoteTokenPriceUsd","getAddress","quoteToken","toLowerCase","totalLiquidity","getFarmApr","poolWeight","maxApr","maximumFractionDigits","exact","activeClassName","to","animation","justifyContent","mt","EarnAssetCard","farms","bestFarms","orderBy","liquidity","token","assets","from","Set","slice","join","WinCard","Hero","homeHeroImg1","homeHeroImg2","Cards","BaseLayout","sm","CTACards","Home","Page","as","homeSecondaryTitle","Countdown","marginTop","FarmStakingCard","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","slowRefresh","setTotalSupply","cakeContract","getCakeContract","methods","call","supply","fetchTotalSupply","tokenAddress","BIG_ZERO","web3","useWeb3","contract","getBep20Contract","balanceOf","fetchBalance","useGetBnbBalance","eth","getBalance","walletBalance","refresh","ref","useRef","current","bold","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","baseForOwn","require","baseEach","createBaseEach","module","exports","baseFor","keys","object","iteratee","isArrayLike","eachFunc","fromRight","collection","iterable","Object","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","send","stake","tokenDecimals","powDecimals","BIG_TEN","pow","referrals","enabled","deposit","getReferralAddress","gas","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","harvest","soushHarvest","soushHarvestBnb","referralAddress","localStorage","getItem","multiCall","abi","getWeb3NoAccount","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","i","newCalls","calldata","encodeFunctionData","aggregate","returnData","concat","decodeFunctionResult","multiBuy","price","numbersList","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","multiClaim","claimedStatus","unClaimedIds","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","drawed","calls4","claim","p","c","sum","getTotalRewards","getMax","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","getWinningNumbers","historyNumbers","winningNumbers","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","setWinningNumbers","useTickets","lotteryNumber","setTickets","baseOrderBy","isArray","iteratees","orders","guard","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","result","key","other","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","children","l","React","Children","toArray","child","useHarvest","farmPid","dispatch","useAppDispatch","useMasterchef","txHash","fetchFarmUserDataAsync","farmPids","harvestPromises","Promise","all","lotteryTicketContract","setMax","fetchMax","allowance","setAllowance","useCake","getLotteryAddress","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","useApprove","cakePriceUsd","poolLiquidityUsd","apr","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","isNaN","isFinite","CountdownWrapper","EstimatedText","BlockNumber","hourSeconds","daySeconds","renderTime","dimension","time","remainingSeconds","startTime","getTime","daysDuration","ceil","isXl","useMatchBreakpoints","countdownUrl","startBlock","timerProps","isPlaying","strokeWidth","href","target","rel","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","marginBottom","baseExtremum","baseGt"],"mappings":"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","file":"static/js/7.9f01303a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { capitalize } from 'lodash'\nimport { edition } from 'edition'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: `pending${capitalize(edition.tokenKeyMasterChef)}`,\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(edition.masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { capitalize } from 'lodash'\nimport { edition } from 'edition'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: `pending${capitalize(edition.tokenKeyMasterChef)}`,\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(edition.masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\nconst CakeHarvestBalance = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning)\n    if (earningNumber.eq(0)) {\n      return accum\n    }\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n  }, 0)\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      {!cakePriceBusd.eq(0) && <CardBusdValue value={earningsBusd} />}\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const { t } = useTranslation()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const cakePriceBusd = usePriceCakeBusd()\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      {!cakePriceBusd.eq(0) ? <CardBusdValue value={busdBalance} /> : <br />}\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { edition } from 'edition'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('${edition.homeStakingCardBackground}');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Farms & Staking')}\n        </Heading>\n        <CardImage src={edition.tokenImage} alt={`${edition.tokenSymbol} logo`} width={64} height={64} />\n        <Block>\n          <Label>{edition.tokenSymbol.toUpperCase()} to Harvest:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{edition.tokenSymbol.toUpperCase()} in Wallet:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? `Collecting ${edition.tokenSymbol.toUpperCase()}`\n                : t('Harvest all (%count%)', {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {t('Lottery ticket purchases are final.')}\n        <br />\n        Your ${edition.tokenSymbol.toUpperCase()} will not be returned to you after you spend it to buy tickets.\n        <br />\n        {t('Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {t(\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {t('I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex alignItems=\"center\">\n        <Input type=\"number\" inputMode=\"numeric\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledSpacer />\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <Button scale=\"sm\" onClick={onSelectMax}>\n            {t('Max')}\n          </Button>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>\n        {t('%num% %symbol% Available', { num: max.toLocaleString(), symbol: availableSymbol })}\n      </StyledMaxText>\n    </>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { edition } from 'edition'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport { useTranslation } from 'contexts/Localization'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onDismiss?: () => void\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getBalanceNumber(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={t('Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={t('Ticket').toUpperCase()}\n        availableSymbol={edition.tokenSymbol.toUpperCase()}\n      />\n      <div>\n        <Tips>{t(`1 Ticket = %lotteryPrice% ${edition.tokenSymbol.toUpperCase()}`, { lotteryPrice: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          Ticket purchases are final. Your ${edition.tokenSymbol.toUpperCase()} cannot be returned to you after buying tickets.\n        </Announce>\n        <Final>{t(`You will spend: %num% ${edition.tokenSymbol.toUpperCase()}`, { num: cakeCosts(val) })}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { edition } from 'edition'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useApproval } from 'hooks/useApproval'\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal'\nimport BuyTicketModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeWinnings from './CakeWinnings'\nimport LotteryJackpot from './LotteryJackpot'\n\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`\n\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst LotteryCard = () => {\n  const { account } = useWeb3React()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requestClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const allowance = useLotteryAllowance()\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n        setLastUpdated()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, setLastUpdated])\n\n  const renderLotteryTicketButtonBuyOrApprove = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n          Approve {edition.tokenSymbol.toUpperCase()}\n        </Button>\n      )\n    }\n    if (lotteryHasDrawn) {\n      return <Button disabled> {t('On sale soon')}</Button>\n    }\n    return (\n      <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy}>\n        {t('Buy Tickets')}\n      </Button>\n    )\n  }\n\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} />)\n\n  return (\n    <StyledLotteryCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Your Lottery Winnings')}\n        </Heading>\n        <CardImage src=\"/images/ticket.svg\" alt=\"cake logo\" width={64} height={64} />\n        <CardMidContent color=\"#7645d9\">{t('Coming Soon')}</CardMidContent>\n        {/* <Block>\n          <Label>{edition.tokenSymbol.toUpperCase()} to Collect:</Label>\n          <CakeWinnings claimAmount={claimAmount} />\n        </Block>\n        <Block>\n          <Label>{t('Total jackpot this round')}:</Label>\n          <LotteryJackpot />\n        </Block>\n        {account ? (\n          <Actions>\n            <Button\n              id=\"dashboard-collect-winnings\"\n              disabled={getBalanceNumber(claimAmount) === 0 || requestClaim}\n              onClick={handleClaim}\n              style={{ marginRight: '8px' }}\n            >\n              {t('Collect Winnings')}\n            </Button>\n            {renderLotteryTicketButtonBuyOrApprove()}\n          </Actions>\n        ) : (\n          <Actions>\n            <UnlockButton width=\"100%\" />\n          </Actions>\n        )} */}\n      </CardBody>\n    </StyledLotteryCard>\n  )\n}\n\nexport default LotteryCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const cakePrice = usePriceCakeBusd()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n  const marketCap = cakePrice.times(cakeSupply)\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {edition.tokenSymbol.toUpperCase()} Stats\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">Market Cap</Text>\n          <CardValue fontSize=\"14px\" value={marketCap.toNumber()} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Total {edition.tokenSymbol.toUpperCase()} Supply</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Total {edition.tokenSymbol.toUpperCase()} Burned</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">New {edition.tokenSymbol.toUpperCase()}/block</Text>\n          <CardValue fontSize=\"14px\" decimals={1} value={edition.tokenPerBlock} />\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTotalValue } from 'state/hooks'\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst TotalValueLockedCard = () => {\n  const totalValue = useTotalValue()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          Total Value Locked (TVL)\n        </Heading>\n        <>\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\n          {/* <Heading size=\"xl\"> */}\n          <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={2} />\n          {/* </Heading> */}\n          <Text color=\"textSubtle\">Across all Farms and Pools</Text>\n        </>\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pancakeswap/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApr } from 'utils/apr'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPRCard = () => {\n  const { t } = useTranslation()\n  const { data: farmsLP } = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApr = useMemo(() => {\n    const aprs = farmsLP\n      // Filter inactive farms, because their theoretical APR is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {\n          const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApr(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApr = max(aprs)\n    return maxApr?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apr-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            Earn up to\n          </Heading>\n          <CardMidContent color=\"#7645d9\">\n            {highestApr ? `${highestApr}% ${t('APR')}` : <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />}\n          </CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              in Farms\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPRCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { Farm } from 'state/types'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useFarms } from 'state/hooks'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#69aefe, #f3acf4);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst EarnAssetCard = () => {\n  const { data: farms } = useFarms()\n  const farmsByLiquidity: Farm[] = orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'asc') as Farm[]\n  const bestFarms = farmsByLiquidity.map((farm) => farm.token.symbol)\n  const assets = Array.from(new Set(bestFarms)).slice(0, 6).join(', ')\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/pools\" id=\"pool-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            Stake\n          </Heading>\n          <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              in Pools\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst WinCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/lottery\" id=\"lottery-pot-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {t('Lottery')}\n          </Heading>\n          <CardMidContent color=\"#7645d9\">{t('Coming Soon')}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\" />\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default WinCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pancakeswap/uikit'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\nimport { edition } from 'edition'\nimport Countdown from 'components/Countdown'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 0;\n  padding-top: 0;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('${edition.homeHeroImg1}'), url('${edition.homeHeroImg2}');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color=\"secondary\">\n          World Swap\n        </Heading>\n        <Text>{ edition.homeSecondaryTitle }</Text>\n      </Hero>\n      <Countdown />\n      <div style={{ marginTop: 64 }}>\n        <Cards>\n          <FarmStakingCard />\n          <LotteryCard />\n        </Cards>\n        <CTACards>\n          <EarnAPRCard />\n          <EarnAssetCard />\n          <WinCard />\n        </CTACards>\n        <Cards>\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { edition } from 'edition'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, tokenDecimals: number) => {\n  const powDecimals = tokenDecimals ? BIG_TEN.pow(tokenDecimals) : DEFAULT_TOKEN_DECIMAL\n\n  if (edition.referrals.enabled) {\n    return masterChefContract.methods\n      .deposit(pid, new BigNumber(amount).times(powDecimals).toString(), getReferralAddress())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(powDecimals).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, tokenDecimals: number) => {\n  const powDecimals = tokenDecimals ? BIG_TEN.pow(tokenDecimals) : DEFAULT_TOKEN_DECIMAL\n\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(tokenDecimals ?? DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(powDecimals).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking('0')\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  if (edition.referrals.enabled) {\n    return masterChefContract.methods\n      .deposit(pid, '0', getReferralAddress())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst getReferralAddress = () => {\n  const referralAddress = localStorage.getItem('ref')\n  return referralAddress && referralAddress.length === 42\n    ? referralAddress\n    : '0x000000000000000000000000000000000000dEaD'\n}\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","/* eslint-disable no-bitwise */\n\nimport React from 'react'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport styled from 'styled-components'\nimport { edition } from 'edition'\n\nconst CountdownWrapper = styled.a`\n  display: flex;\n  justify-content: space-around;\n  font-family: sans-serif;\n  text-align: center;\n  padding-top: 20px;\n  width: 100%;\n  margin: 0 auto 32px;\n`\n\nconst EstimatedText = styled.div`\n  text-align: center;\n`\n\nconst BlockNumber = styled.p`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst minuteSeconds = 60\nconst hourSeconds = 3600\nconst daySeconds = 86400\n\nconst renderTime = (dimension, time) => (\n  <div>\n    <div style={{ fontSize: 32 }}>{time}</div>\n    <div>{dimension}</div>\n  </div>\n)\n\nconst getTimeSeconds = (time: number) => (minuteSeconds - time) | 0\nconst getTimeMinutes = (time: number) => ((time % hourSeconds) / minuteSeconds) | 0\nconst getTimeHours = (time: number) => ((time % daySeconds) / hourSeconds) | 0\nconst getTimeDays = (time: number) => (time / daySeconds) | 0\n\nexport default function Countdown() {\n  const now = Date.now()\n\n  const remainingSeconds = (edition.startTime.getTime() - now) / 1000\n  const days = Math.ceil(remainingSeconds / daySeconds)\n  const daysDuration = days * daySeconds\n  const { isXl } = useMatchBreakpoints()\n  const countdownUrl = `https://bscscan.com/block/countdown/${edition.startBlock}`\n\n  if (now > edition.startTime.getTime()) {\n    return <></>\n  }\n\n  const timerProps = {\n    isPlaying: true,\n    size: isXl ? 120 : 80,\n    strokeWidth: isXl ? 6 : 2,\n  }\n\n  return (\n    <>\n      <CountdownWrapper href={countdownUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#7E2E84\"\n          duration={daysDuration}\n          initialRemainingTime={remainingSeconds}\n        >\n          {({ elapsedTime }) => renderTime('days', getTimeDays(daysDuration - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#D14081\"\n          duration={daySeconds}\n          initialRemainingTime={remainingSeconds % daySeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > hourSeconds, 0]}\n        >\n          {({ elapsedTime }) => renderTime('hours', getTimeHours(daySeconds - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#EF798A\"\n          duration={hourSeconds}\n          initialRemainingTime={remainingSeconds % hourSeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > minuteSeconds, 0]}\n        >\n          {({ elapsedTime }) => renderTime('minutes', getTimeMinutes(hourSeconds - elapsedTime))}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors=\"#218380\"\n          duration={minuteSeconds}\n          initialRemainingTime={remainingSeconds % minuteSeconds}\n          onComplete={(totalElapsedTime) => [remainingSeconds - totalElapsedTime > 0, 0]}\n        >\n          {({ elapsedTime }) => renderTime('seconds', getTimeSeconds(elapsedTime))}\n        </CountdownCircleTimer>\n      </CountdownWrapper>\n      <EstimatedText>\n        <p style={{ color: 'white', marginBottom: 16 }}>\n          <strong>{edition.startTime.toString()}</strong>\n        </p>\n        <BlockNumber>\n          <a href={countdownUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Farming starts in Block #{edition.startBlock}\n          </a>\n        </BlockNumber>\n      </EstimatedText>\n    </>\n  )\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n"],"sourceRoot":""}